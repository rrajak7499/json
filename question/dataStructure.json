{
  "dataStructure": {
    "set1": [
      {
        "ques": "1. The complexity of Bubble sort algorithm in average case is ",
        "A": " O(n) ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " O(log n) ",
        "C": " O(n2) ",
        "D": " O(n log n) ",
        "id": 1
      },
      {
        "ques": "2. The process of processing each element in the list is known as-",
        "A": " Sorting ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Merging ",
        "C": " Inserting ",
        "D": " Traversal ",
        "id": 2
      },
      {
        "ques": "3. The memory address of the first element of an array is called ",
        "A": " Floor address ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Foundation address ",
        "C": " First address ",
        "D": " Base address ",
        "id": 3
      },
      {
        "ques": "4. Which of the following name does not relate to stacks ?",
        "A": " FIFO list ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " LIFO list ",
        "C": " Piles ",
        "D": " Push-down lists ",
        "id": 4
      },
      {
        "ques": "5. The situation when in a linked list START=NULL is –",
        "A": " Underflow ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Overflow ",
        "C": " Housefull ",
        "D": " Saturated ",
        "id": 5
      },
      {
        "ques": "6. Which of the following is a two-way list?",
        "A": " Grounded header list ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Circular header list ",
        "C": " Linked list with header and trailer nodes ",
        "D": " None of the above ",
        "id": 6
      },
      {
        "ques": "7. Two dimentional array is also called –",
        "A": " Table arrays ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " Matrix arrays ",
        "C": " Both of the above ",
        "D": " None of these ",
        "id": 7
      },
      {
        "ques": "8. A variable P is called pointer if –",
        "A": " P contains the address of an element in DATA ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " P points to the address of first element in DATA ",
        "C": " P can store only memory address ",
        "D": " P contains the DATA and the address of DATA ",
        "id": 8
      },
      {
        "ques": "9. Which of the data structure store the homogeneous data elements",
        "A": " Record ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " Pointers ",
        "C": " Arrays ",
        "D": " None of the above ",
        "id": 9
      },
      {
        "ques": "10. _____ is not the component of data structure –",
        "A": " Operations ",
        "ans": " D ",
        "exp": "Not Avilable",
        "B": " Storage structures ",
        "C": " Algorithms ",
        "D": " None of the above ",
        "id": 10
      },
      {
        "ques": "11. Which data structure is used in breadth first search ?",
        "A": " Stack ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Queue ",
        "C": " Tree ",
        "D": " Array ",
        "id": 11
      },
      {
        "ques": "12. To represent hierarchical relationship between elements which data structure is suitable ?",
        "A": " Dequeue ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " Priority queue ",
        "C": " Tree ",
        "D": " Graph ",
        "id": 12
      },
      {
        "ques": "13. Which of the following data structure is not linear data sturcture ?",
        "A": " Array ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Linked list ",
        "C": " Both the above ",
        "D": " None of the above ",
        "id": 13
      },
      {
        "ques": "14. Binay search tree cannot be applied to –",
        "A": " Sorted linked list ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Sorted binary trees ",
        "C": " Sorted linear array ",
        "D": " Pointer array ",
        "id": 14
      },
      {
        "ques": "15. The empty list is the one which has no ",
        "A": " Nodes ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " Data ",
        "C": " Both (a) and (b) ",
        "D": " Address ",
        "id": 15
      },
      {
        "ques": "16. Which of the following linked list have last node of the list pointing to the first node ?",
        "A": " Circular doubly linked list ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Circular linked list ",
        "C": " Circular singly linked list ",
        "D": " ",
        "id": 16
      },
      {
        "ques": "17. Key value pair is usually seen in –",
        "A": " Hash tables ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Heaps ",
        "C": " Both (a) and (b) ",
        "D": " Skip list ",
        "id": 17
      },
      {
        "ques": "18. Which of the following ways is in a in-order traversal?",
        "A": " Root → left sub tree → right sub tree ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Root → right sub tree → left sub tree ",
        "C": " Right sub tree → left sub tree → root ",
        "D": " Left sub tree → root → right sub tree ",
        "id": 18
      },
      {
        "ques": "19. Items in a priority queue are entered in a _____ order.",
        "A": " Random ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Order of priority ",
        "C": " As and when they come ",
        "D": " None of the above ",
        "id": 19
      },
      {
        "ques": "20. On what principle does stack works ?",
        "A": " FILO ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " FIFO ",
        "C": " LILO ",
        "D": " LIFO or FILO ",
        "id": 20
      }
    ],
    "set2": [
      {
        "ques": "1. Assuming int is of 4 bytes, what is the size of int arr[15]; ?",
        "A": " 15 ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " 19 ",
        "C": " 11 ",
        "D": " 60 ",
        "id": 1
      },
      {
        "ques": "2. What are the advantages of Arrays ?",
        "A": " Easier to store elements of some datatype ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Used to implement other data structures like stack and queue ",
        "C": " Convenient way to represent matrices as a 2D array ",
        "D": " All of the mentioned ",
        "id": 2
      },
      {
        "ques": "3. Which of the following are the uses of matrices ?",
        "A": " In solving linear equations ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Image Processing ",
        "C": " Graph Theory ",
        "D": " All of the mentioned ",
        "id": 3
      },
      {
        "ques": "4. Process of removing an element from Stack is called _____",
        "A": " Create ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Push ",
        "C": " Evaluation ",
        "D": " Pop ",
        "id": 4
      },
      {
        "ques": "5. Which data structure is used for implementing recursion ?",
        "A": " Queue ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Stack ",
        "C": " Array ",
        "D": " List ",
        "id": 5
      },
      {
        "ques": "6. Which of the following is not an inherent application of stack ?",
        "A": " Reversing a string ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Evaluation of postfix expression ",
        "C": " Implementation of recursion ",
        "D": " Job scheduling ",
        "id": 6
      },
      {
        "ques": "7. The data structure required for Breadth First Traversal on a graph is ?",
        "A": " Stack ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " Array ",
        "C": " Queue ",
        "D": " Tree ",
        "id": 7
      },
      {
        "ques": "8.In linked list each node contain minimum of two fields. One field is data field to store the data second field is ?",
        "A": " Pointer to character ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " Pointer to Integer ",
        "C": " Point to node ",
        "D": " Node ",
        "id": 8
      },
      {
        "ques": "9. Which is memory efficient double linked list ?",
        "A": " Each node has only one pointer to traverse the list back and forth ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " The list has break points for fast traversal ",
        "C": " An auxiliary singly linked list acts as a helper list to traverse through the doubly linked list ",
        "D": " None of the mentioned ",
        "id": 9
      },
      {
        "ques": "10. Which of the following is false about a circular linked list ?",
        "A": " Every node has successor ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Time complexity of inserting a new node of the head of the list is 0(1) ",
        "C": " Time complexity for deleting the last node is 0(n) ",
        "D": " None of the above ",
        "id": 10
      },
      {
        "ques": "11. What is the coplexity of searching for a particular element in a singly linked list ?",
        "A": " 0(n) ",
        "ans": " B ",
        "exp": "Not Avilable",
        "B": " 0(1) ",
        "C": " log(n) ",
        "D": " n Log n ",
        "id": 11
      },
      {
        "ques": "12. Can a tree stored in an array using either one of inorder or postorder or preorder traversal be again reformed ?",
        "A": " Yes just traverse through the array and form the tree ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " No we need one more traversal to form a tree ",
        "C": " No in case of sparse trees ",
        "D": " None of the mentioned ",
        "id": 12
      },
      {
        "ques": "13. What is the space complexity of the postorder traversal in the recursive fashion? (d is the tree depth and n is the number of nodes)",
        "A": " 0(1) ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " 0(n log d) ",
        "C": " 0(log d) ",
        "D": " 0(d) ",
        "id": 13
      },
      {
        "ques": "14. What is the spaciality about the inorder traversal of a binary search tree ?",
        "A": " It traverses in a non-increasing order ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " It traverses in an increasing order ",
        "C": " It traverses in a random fashion ",
        "D": " None of the mentioned ",
        "id": 14
      },
      {
        "ques": "15. What is an internal sorting algorithm ?",
        "A": " Algorithm that uses tape or disk during the sort ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Algorithm that uses main memory during the sort ",
        "C": " Algorithm that involves swapping ",
        "D": " Algorithm that are considered in place ",
        "id": 15
      },
      {
        "ques": "16. What is the worst case complexity of Quick Sort ?",
        "A": " 0(n log n) ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " 0(log n) ",
        "C": " 0(n) ",
        "D": " 0(n2) ",
        "id": 16
      },
      {
        "ques": "17. Which of the following statements for a simple graph is correct ?",
        "A": " Every path is a trail ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Every trail is a path ",
        "C": " Every trail is a path as well as a every path is a trail ",
        "D": " None of the above ",
        "id": 17
      },
      {
        "ques": "18. A connected planner graph having 6 vertices, 7 edges contains _____ regions.",
        "A": " 15 ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " 3 ",
        "C": " 1 ",
        "D": " 11 ",
        "id": 18
      },
      {
        "ques": "19. The depth first search traversal of a graph will result into ?",
        "A": " Linked List ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Tree ",
        "C": " Graph with back edges ",
        "D": " None of the above ",
        "id": 19
      },
      {
        "ques": "20. The number of elements in the adjaccncy natrix of a graph having 7 vertices ?",
        "A": " 7 ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " 14 ",
        "C": " 36 ",
        "D": " 49 ",
        "id": 20
      }
    ],
    "set3": [
      {
        "ques": "1. Now do you initialize an array in C ?",
        "A": " int arr[3]=(1,2,3); ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " int arr(3)={1,2,3}; ",
        "C": " int arr[3]={1,2,3}; ",
        "D": " int arr(3)=(1,2,3); ",
        "id": 1
      },
      {
        "ques": "2. which of the following concepts make extensive use of arrays ?",
        "A": " Binary tree ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Scheduling of processes ",
        "C": " Catching ",
        "D": " Spatial locality ",
        "id": 2
      },
      {
        "ques": "3. What is the order of a matrix ?",
        "A": " Number of rows X number of columns ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Number of columns X number of rows ",
        "C": " Number or rows X number of rows ",
        "D": " Number of columns X number of columns ",
        "id": 3
      },
      {
        "ques": "4. Process of inserting an element in stack is called ______",
        "A": " Create ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Puch ",
        "C": " Evaluation ",
        "D": " Pop ",
        "id": 4
      },
      {
        "ques": "5. The data structure required to check whether an expression contains balanced parenthesis is ?",
        "A": " Stack ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Queue ",
        "C": " Array ",
        "D": " Tree ",
        "id": 5
      },
      {
        "ques": "6. Which data structure is needed to convert infix notation to postfix notation ?",
        "A": " Branch ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Tree ",
        "C": " Queue ",
        "D": " Stack ",
        "id": 6
      },
      {
        "ques": "7. A linear collection of data elements where the linear node is given by means of pointer is called ?",
        "A": " Linked list ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Node list ",
        "C": " Primitive list ",
        "D": " None of the mentioned ",
        "id": 7
      },
      {
        "ques": "8. A linear list of elements in which deletion can be done from one end(front) and insertion can take place only at the other end(rear) is known as a",
        "A": " Queue ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Stack ",
        "C": " Tree ",
        "D": " Link list ",
        "id": 8
      },
      {
        "ques": "9. Which of the following is false about a doubly linked list ?",
        "A": " We can nevigate in both the directions ",
        "ans": "Answer 😀 ",
        "exp": "Not Avilable",
        "B": " It require more space than a singly linked list ",
        "C": " The insertion and deletion of a node take a bit longer ",
        "D": " None of the mentioned ",
        "id": 9
      },
      {
        "ques": "10. What differentiates a circular linked list from normal liked list ?",
        "A": " You cannot have the ‘next’ pointer point to null in a circular linked list ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " It is faster to traverse the circular linked list ",
        "C": " You may or may not have the ‘next’ pointer point to null in a circular linked list ",
        "D": " All of the mentioned ",
        "id": 10
      },
      {
        "ques": "11. What is the complexity of searching for a particular element in a singly linked list ?",
        "A": " O(n) ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " O(1) ",
        "C": " log n ",
        "D": " n log n ",
        "id": 11
      },
      {
        "ques": "12. Binary trees can have how many children ?",
        "A": " 2 ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Any number of children ",
        "C": " 0 or 1 or 2 ",
        "D": " 0 or 1 ",
        "id": 12
      },
      {
        "ques": "13. What is the time complexity of pre-order traversal in the iterative fashion ?",
        "A": " O(1) ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " O(n) ",
        "C": " O(log n) ",
        "D": " O(n log n) ",
        "id": 13
      },
      {
        "ques": "14. Which of the following is false about a binary search tree ?",
        "A": " The left child is always lesser than its parent ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " The right child is always greather than its parent ",
        "C": " The left and right subtree should also be binary search tree ",
        "D": " None of the mentioned ",
        "id": 14
      },
      {
        "ques": "15. What is an external sorting algorithm ?",
        "A": " Algorithm that uses tape or disk during the sort ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Algorithm that uses main memory during the sort ",
        "C": " Algorithm that involves swapping ",
        "D": " Algorithm that are considered in place ",
        "id": 15
      },
      {
        "ques": "16. Quick sort can be categorized into which of the following ?",
        "A": " Brute force technique ",
        "ans": " B ",
        "exp": "Not Avilable",
        "B": " Divide and conquer ",
        "C": " Greedy algorithm ",
        "D": " Dynamics programming ",
        "id": 16
      },
      {
        "ques": "17. What is the number of edges present in a complete graph having n vertices ?",
        "A": " (n*(n+1))/2 ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " (n*(n-1))/2 ",
        "C": " n ",
        "D": " Information gives in insufficient ",
        "id": 17
      },
      {
        "ques": "18. A connected planer graph having 6 vertices 7 edge contains ______ regions.",
        "A": " 15 ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " 3 ",
        "C": " 1 ",
        "D": " 11 ",
        "id": 18
      },
      {
        "ques": "19. Depth first search is equivalent to which of the traversal in the Binary Tree ?",
        "A": " Pre-order traversal ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " Post-order traversal ",
        "C": " Level-order traversal ",
        "D": " In-order traversal ",
        "id": 19
      },
      {
        "ques": "20. What would be the number of zero’s in the adjacency matrix of the given graph ?",
        "A": " 10 ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " 6 ",
        "C": " 16 ",
        "D": " 0 ",
        "id": 20
      }
    ],
    "set4": [
      {
        "ques": "1. Which of the following points is/are true about linked list data structure when it is compared with array ? ",
        "A": " Arrays have better cache locality that can make them better in terms of performance. ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " It is easy to insert and delete elements in linked list. ",
        "C": " The size of array has to be pre-decided, linked lists can change their size any time. ",
        "D": " All of the above ",
        "id": 1
      },
      {
        "ques": "2. In the worst case, a binary search tree will take how much time to search an element ?",
        "A": " O(n) ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " O(log n) ",
        "C": " O(n2 )",
        "D": " O(n log n) ",
        "id": 2
      },
      {
        "ques": "3. What is the space complexity for deleting a linked list?",
        "A": " O(1) ",
        "ans": " A ",
        "exp": "Not Avilable",
        "B": " O(n) ",
        "C": " Either O(1) or O(n) ",
        "D": " O(log n) ",
        "id": 3
      },
      {
        "ques": "4. The situation when in a linked list START-NULL is ",
        "A": " Underflow ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Overflow ",
        "C": " Housefull ",
        "D": " Saturated ",
        "id": 4
      },
      {
        "ques": "5. What would be the asymoptotic time complexity to add a node at the end of singly linked list, if the pointer is initially pointing to the head of the list ?",
        "A": " O(1) ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " O(n) ",
        "C": " O(n) ",
        "D": " O(1) ",
        "id": 5
      },
      {
        "ques": "6. What kind of linked list is best to answer question like  *What is the item at position n*?",
        "A": " Singly linked list ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Doubly linked list ",
        "C": " Circular linked list ",
        "D": " Array implementation of linked list ",
        "id": 6
      },
      {
        "ques": "7. A variation of linked list is cirular linked list, in which the last node in the list points to first node of the list. One problem with this type of list is",
        "A": " It waste memory space since the pointer head already points to the first node and thus the list node does not need to point to the first node ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " It is not possible to add a node at the end of the list ",
        "C": " It is difficult to traverse the list as pointer of the last node is now not NULL ",
        "D": " All of the above ",
        "id": 7
      },
      {
        "ques": "8. Each node in a linked list must contain at least",
        "A": " Three fields ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Two fields ",
        "C": " Four fields ",
        "D": " Five fields ",
        "id": 8
      },
      {
        "ques": "9. A linear list in which the last node points to the first node is ",
        "A": " Singly linked list ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Circular linked list ",
        "C": " Doubly linked list ",
        "D": " None of the above ",
        "id": 9
      },
      {
        "ques": "10. In a linked list, insertion can be done as ",
        "A": " beginning ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " end ",
        "C": " middle ",
        "D": " All of the above ",
        "id": 10
      },
      {
        "ques": "11. What is the worst case run-time complexity of binary search algorithm?",
        "A": " O(n2 ) ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " O(nlog n ) ",
        "C": " O(n3 ) ",
        "D": " O(n) ",
        "id": 11
      },
      {
        "ques": "12. push() and pop() functions are found in ",
        "A": " queues ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " list ",
        "C": " stacks ",
        "D": " trees ",
        "id": 12
      },
      {
        "ques": "13. Binary search tree has average case run-time complexity of O(log n). What could be the worst case ?",
        "A": " O(n) ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " O(n2 ) ",
        "C": " O(n3) ",
        "D": " None of the above ",
        "id": 13
      },
      {
        "ques": "14. What will be the running-time of Dijkstra’s single-source shortest path algorithm, if the graph G(V,E) is stored in the form of adjacency list and binary heap is used?",
        "A": " O(|V|2) ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " O(|V|log|V|) ",
        "C": " O(|E|+|V|log|V|) ",
        "D": " None of the above ",
        "id": 14
      },
      {
        "ques": "15. Tower of Hanoi is a classic example of ",
        "A": " Divide and conquer ",
        "ans": " D",
        "exp": "Not Avilable",
        "B": " Recursive approach ",
        "C": "(B) but not (A) ",
        "D": " Both (A) and (B) ",
        "id": 15
      },
      {
        "ques": "16. If locality is a concern, you can use ______ to traverse the graph.",
        "A": " Breadth-first search ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Depth-first search ",
        "C": " Either BFS or DFS ",
        "D": " None of the above ",
        "id": 16
      },
      {
        "ques": "17. Which data structure is used for balancing of symbols?",
        "A": " Queue ",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " Stack ",
        "C": " Tree ",
        "D": " Graph ",
        "id": 17
      },
      {
        "ques": "18. Which data structure is most efficient to find the top 10 largest items out of 1 million items stored in file?",
        "A": " Min heap ",
        "ans": " A",
        "exp": "Not Avilable",
        "B": " Max heap ",
        "C": " Binary search tree ",
        "D": " AVL tree ",
        "id": 18
      },
      {
        "ques": "19. A data structure is required for storing a set of integers such that each of the following operations can be done in (log n) time, where n is the number of elements in the set :  ",
        "A": " A heap can be used but not a balanced binary search tree",
        "B": " A balanced binary search tree can be used but not a heap ",
        "C": " Both balanced binary search tree and heap can be used ",
        "D": " Neither balanced binary search tree nor heap can be used ",
        "id": 19
      },
      {
        "ques": "Deletion of the smallest element ",
        "A": " A heap can be used but not a balanced binary search tree",
        "B": " A balanced binary search tree can be used but not a heap ",
        "C": " Both balanced binary search tree and heap can be used ",
        "D": " Neither balanced binary search tree nor heap can be used ",
        "id": 19
      },
      {
        "ques": "Insertion of an element if it is not already present in the set ",
        "A": " A heap can be used but not a balanced binary search tree",
        "B": " A balanced binary search tree can be used but not a heap ",
        "C": " Both balanced binary search tree and heap can be used ",
        "D": " Neither balanced binary search tree nor heap can be used ",
        "id": 19
      },
      {
        "ques": " Which of the following can be used?",
        "A": " A heap can be used but not a balanced binary search tree",
        "ans": " B",
        "exp": "Not Avilable",
        "B": " A balanced binary search tree can be used but not a heap ",
        "C": " Both balanced binary search tree and heap can be used ",
        "D": " Neither balanced binary search tree nor heap can be used ",
        "id": 19
      },
      {
        "ques": "20. The most appropriate matching for the following pairs is X. Depth-first search  1. Heap Y. Breadth-first 2.Queue   Z. Sorting 3.Stack ",
        "A": " X-1, Y-2, Z-3 ",
        "ans": " C",
        "exp": "Not Avilable",
        "B": " X-3, Y-1, Z-2 ",
        "C": " X-3, Y-2, Z-1 ",
        "D": " X-2, Y-3, Z-1 ",
        "id": 20
      }
    ]
  }
}
